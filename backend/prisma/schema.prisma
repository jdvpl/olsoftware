generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model establishment {
  id_establishment Int       @id @default(autoincrement())
  name             String
  income           Decimal   @db.Decimal(12, 2)
  employee_count   Int
  id_merchant      Int
  updated_at       DateTime? @db.Timestamp(6)
  updated_by       String?   @db.VarChar(100)
  merchant         merchant  @relation(fields: [id_merchant], references: [id_merchant], onDelete: Cascade, onUpdate: NoAction, map: "fk_establishment_merchant")

  @@index([id_merchant], map: "idx_establishment_merchant")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model merchant {
  id_merchant       Int             @id @default(autoincrement())
  business_name     String
  id_municipio      Int
  phone             String?         @db.VarChar(20)
  optional_email    String?         @db.VarChar(255)
  registration_date DateTime        @db.Date
  status            String          @db.VarChar(10)
  updated_at        DateTime?       @db.Timestamp(6)
  updated_by        String?         @db.VarChar(100)
  establishment     establishment[]
  municipality      municipality    @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_merchant_municipio")

  @@index([business_name], map: "idx_merchant_name")
  @@index([status], map: "idx_merchant_status")
  @@index([id_municipio], map: "idx_merchant_municipio")
}

model role {
  id_role Int    @id @default(autoincrement())
  name    String @unique @db.VarChar(50)
  user    user[]
}

model user {
  id_user  Int    @id @default(autoincrement())
  name     String
  email    String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  role_id  Int
  role     role   @relation(fields: [role_id], references: [id_role], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_role")

  @@index([email], map: "idx_user_email")
}

model country {
  id_country Int          @id @default(autoincrement())
  nombre     String       @unique @db.VarChar(100)
  department department[]
}

model department {
  id_department Int            @id @default(autoincrement())
  nombre        String         @db.VarChar(100)
  id_country    Int
  country       country        @relation(fields: [id_country], references: [id_country], onDelete: NoAction, onUpdate: NoAction, map: "fk_department_country")
  municipality  municipality[]

  @@index([id_country], map: "idx_department_country")
}

model municipality {
  id_municipio  Int        @id @default(autoincrement())
  nombre        String     @db.VarChar(100)
  id_department Int
  merchant      merchant[]
  department    department @relation(fields: [id_department], references: [id_department], onDelete: NoAction, onUpdate: NoAction, map: "fk_municipality_department")

  @@index([id_department], map: "idx_municipality_department")
}
